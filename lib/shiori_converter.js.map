{"version":3,"sources":["lib/shiori_converter.js"],"names":["_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","exports","window","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","require","ShioriJK","ShioriConverter","this","request","version","RequestNotSetError","request_line","request_4to3","request_4to2","request_3to4","request_3to2","request_2to4","request_2to3","response","ResponseNotSetError","status_line","response_4to3","response_4to2","response_3to4","response_3to2","response_2to4","response_2to3","NotImplementedError","id","headers","header","ID","method","match","method3to2","Headers","Request","conv_request","Message","RequestLine","protocol","Age","name","result","undefined","ghosts","push","ghosts_headers","map","ghost","join","request_to","value_name","Response","Value","Reference0","StatusLine","code","_Error","getPrototypeOf","apply","arguments","Error","_Error2","_Error3"],"mappings":"AASA,QAASA,4BAA2BC,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAElO,QAASE,WAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIC,WAAU,iEAAoED,GAAeD,GAASG,UAAYC,OAAOC,OAAOJ,GAAcA,EAAWE,WAAaG,aAAeC,MAAOP,EAAUQ,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeT,IAAYG,OAAOO,eAAiBP,OAAOO,eAAeX,EAAUC,GAAcD,EAASY,UAAYX,GAEje,QAASY,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIb,WAAU,qCAbhH,GAAsB,mBAAZc,UAA6C,mBAAXC,QAAwB,GAAID,SAAUC,MAGlF,IAAIC,cAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWhB,WAAagB,EAAWhB,aAAc,EAAOgB,EAAWd,cAAe,EAAU,SAAWc,KAAYA,EAAWf,UAAW,GAAML,OAAOqB,eAAeL,EAAQI,EAAWE,IAAKF,IAAiB,MAAO,UAAUT,EAAaY,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBJ,EAAYZ,UAAWwB,GAAiBC,GAAaT,EAAiBJ,EAAaa,GAAqBb,KAYjiB,IAVAX,OAAOqB,eAAeT,QAAS,cAC7BT,OAAO,IASc,mBAAZsB,SACT,GAAIC,UAAWD,QAAQ,WAOzB,IAAIE,iBAAkB,WACpB,QAASA,KACPlB,gBAAgBmB,KAAMD,GAmYxB,MAhYAb,cAAaa,EAAiB,OAC5BL,IAAK,aAQLnB,MAAO,SAAoB0B,EAASC,GAClC,IAAKD,EAAS,KAAM,IAAIF,GAAgBI,kBACxC,OAAqC,QAAjCF,EAAQG,aAAaF,QACP,QAAZA,EACKD,EACc,QAAZC,EACFH,EAAgBM,aAAaJ,GAE7BF,EAAgBO,aAAaL,GAEI,QAAjCA,EAAQG,aAAaF,QACd,QAAZA,EACKH,EAAgBQ,aAAaN,GACf,QAAZC,EACFD,EAEAF,EAAgBS,aAAaP,GAGtB,QAAZC,EACKH,EAAgBU,aAAaR,GACf,QAAZC,EACFH,EAAgBW,aAAaT,GAE7BA,KAcbP,IAAK,cACLnB,MAAO,SAAqB0B,EAASU,EAAUT,GAC7C,IAAKD,EAAS,KAAM,IAAIF,GAAgBI,kBACxC,KAAKQ,EAAU,KAAM,IAAIZ,GAAgBa,mBACzC,OAAqC,QAAjCD,EAASE,YAAYX,QACP,QAAZA,EACKS,EACc,QAAZT,EACFH,EAAgBe,cAAcb,EAASU,GAEvCZ,EAAgBgB,cAAcd,EAASU,GAEN,QAAjCA,EAASE,YAAYX,QACd,QAAZA,EACKH,EAAgBiB,cAAcf,EAASU,GACzB,QAAZT,EACFS,EAEAZ,EAAgBkB,cAAchB,EAASU,GAGhC,QAAZT,EACKH,EAAgBmB,cAAcjB,EAASU,GACzB,QAAZT,EACFH,EAAgBoB,cAAclB,EAASU,GAEvCA,KAYbjB,IAAK,eACLnB,MAAO,SAAsB0B,GAC3B,KAAM,IAAIF,GAAgBqB,uBAU5B1B,IAAK,eACLnB,MAAO,SAAsB0B,GAC3B,MAAOF,GAAgBS,aAAaT,EAAgBM,aAAaJ,OAUnEP,IAAK,aACLnB,MAAO,SAAoB0B,GACzB,GAAIoB,GAAKpB,EAAQqB,QAAQC,OAAOC,EAChC,OAAW,YAAPH,EACK,cACS,YAAPA,EACF,QACS,mBAAPA,EACF,wBACS,mBAAPA,EACF,wBACkC,WAAhCpB,EAAQG,aAAaqB,OAC9B,OACSJ,EAAGK,MAAM,UACT,aAEE,kBAWfhC,IAAK,eACLnB,MAAO,SAAsB0B,GAM3B,GAAIwB,GAAS1B,EAAgB4B,WAAW1B,EACxC,IAAKwB,EAAL,CAGA,GAAIJ,GAAKpB,EAAQqB,QAAQC,OAAOC,GAE5BF,EAAU,GAAIxB,UAAS8B,QAAQC,QAC/BC,EAAe,GAAIhC,UAASiC,QAAQF,SACtCzB,aAAc,GAAIN,UAASkC,aACzBP,OAAQA,EACRQ,SAAUhC,EAAQgC,SAClB/B,QAAS,QAEXoB,QAASA,GAGX,IAAe,gBAAXG,OAEG,IAAe,iBAAXA,GAAmC,MAANJ,EAAY,CAChD,GAAW,kBAAPA,EAAwB,CAE1BC,EAAQC,OAAe,OAAItB,EAAQqB,QAAQC,OAAmB,WAC9DD,EAAQC,OAAiB,SAAItB,EAAQqB,QAAQC,OAAmB,WAChED,EAAQC,OAAY,IAAItB,EAAQqB,QAAQC,OAAOW,KAAO,GAEtD,KAAK,GAAIC,KAAQlC,GAAQqB,QAAQC,OAAQ,CACvC,GAAIhD,GAAQ0B,EAAQqB,QAAQC,OAAOY,GAC/BC,EAASC,QACTD,EAASD,EAAKT,MAAM,qBACtBJ,EAAQC,OAAO,aAAea,EAAO,GAAK,IAAM,GAAK7D,EAErD+C,EAAQC,OAAOY,GAAQ,GAAK5D,EAGhC,MAAOuD,GAGPR,EAAQC,OAAc,MAAIF,MAEvB,CAAA,GAAe,eAAXI,GAAiC,MAANJ,EAG/B,CAAA,GAAe,UAAXI,EAAoB,CAE7BH,EAAQC,OAAa,KAAItB,EAAQqB,QAAQC,OAAmB,UAE5D,KAAK,GAAIY,KAAQlC,GAAQqB,QAAQC,OAAQ,CACvC,GAAIhD,GAAQ0B,EAAQqB,QAAQC,OAAOY,GAC/BC,EAASC,QACTD,EAASD,EAAKT,MAAM,qBACtBJ,EAAQC,OAAO,aAAea,EAAO,GAAK,IAAM,GAAK7D,EAErD+C,EAAQC,OAAOY,GAAQ,GAAK5D,EAGhC,MAAOuD,GACF,GAAe,0BAAXL,EAGT,MADAH,GAAQC,OAAc,MAAItB,EAAQqB,QAAQC,OAAmB,WACtDO,CACF,IAAe,0BAAXL,EAAoC,CAE7C,GAAIa,KACJ,KAAK,GAAIH,KAAQlC,GAAQqB,QAAQC,OAAQ,CACvC,GAAIhD,GAAQ0B,EAAQqB,QAAQC,OAAOY,EAC/BA,GAAKT,MAAM,kBACbY,EAAOC,KAAK,GAAKhE,GAEjB+C,EAAQC,OAAOY,GAAQ,GAAK5D,EAGhC,GAAIiE,GAAiBF,EAAOG,IAAI,SAAUC,GACxC,MAAO,YAAcA,EAAQ,SAC5BC,KAAK,GAER,OAAOb,GAAa1B,aAAe,OAAS0B,EAAaR,QAAUkB,EAAiB,OAEpF,OApCAlB,EAAQC,OAAW,GAAIF,EAsC3B,IAAK,GAAIc,KAAQlC,GAAQqB,QAAQC,OAC/B,GAAa,OAATY,EAAJ,CACA,GAAI5D,GAAQ0B,EAAQqB,QAAQC,OAAOY,EACnCb,GAAQC,OAAOY,GAAQ,GAAK5D,EAE9B,MAAOuD,OAUTpC,IAAK,eACLnB,MAAO,SAAsB0B,GAC3B,KAAM,IAAIF,GAAgBqB,uBAU5B1B,IAAK,eACLnB,MAAO,SAAsB0B,GAC3B,KAAM,IAAIF,GAAgBqB,uBAU5B1B,IAAK,eACLnB,MAAO,SAAsB0B,GAC3B,MAAOF,GAAgBQ,aAAaR,EAAgBW,aAAaT,OAWnEP,IAAK,gBACLnB,MAAO,SAAuB0B,EAASU,GACrC,KAAM,IAAIZ,GAAgBqB,uBAW5B1B,IAAK,gBACLnB,MAAO,SAAuB0B,EAASU,GACrC,MAAOZ,GAAgBkB,cAAclB,EAAgBe,cAAcb,EAASU,OAW9EjB,IAAK,gBACLnB,MAAO,SAAuB0B,EAASU,GACrC,KAAM,IAAIZ,GAAgBqB,uBAW5B1B,IAAK,gBACLnB,MAAO,SAAuB0B,EAASU,GACrC,GAAImB,GAAe/B,EAAgB6C,WAAW3C,EAAS,OACnD4C,EAAaR,MACjB,QAAQP,EAAa1B,aAAaqB,QAChC,IAAK,aACHoB,EAAa,QACb,MACF,KAAK,WACHA,EAAa,MACb,MACF,KAAK,aACHA,EAAa,QACb,MACF,SACEA,EAAa,WAGjB,GAAIvB,GAAU,GAAIxB,UAAS8B,QAAQkB,QACQ,OAAvCnC,EAASW,QAAQC,OAAOsB,KAC1BvB,EAAQC,OAAOwB,MAAQpC,EAASW,QAAQC,OAAOsB,GAEjD,KAAK,GAAIV,KAAQxB,GAASW,QAAQC,OAAQ,CACxC,GAAIhD,GAAQoC,EAASW,QAAQC,OAAOY,GAEhCC,EAASC,QACTD,EAASD,EAAKT,MAAM,qBACtBJ,EAAQC,OAAO,aAAea,EAAO,GAAK,IAAM7D,EAC9B,OAAT4D,EACTb,EAAQC,OAAOyB,WAAazE,EACnB4D,IAASU,IAClBvB,EAAQC,OAAOY,GAAQ5D,GAG3B,MAAO,IAAIuB,UAASiC,QAAQe,UAC1BjC,YAAa,GAAIf,UAASmD,YACxBC,KAAMvC,EAASE,YAAYqC,KAC3BjB,SAAUtB,EAASE,YAAYoB,SAC/B/B,QAAS,QAEXoB,QAASA,OAYb5B,IAAK,gBACLnB,MAAO,SAAuB0B,EAASU,GACrC,KAAM,IAAIZ,GAAgBqB,uBAW5B1B,IAAK,gBACLnB,MAAO,SAAuB0B,EAASU,GACrC,MAAOZ,GAAgBiB,cAAcjB,EAAgBoB,cAAclB,EAASU,QAIzEZ,IAOTA,iBAAgBI,mBAAqB,SAAWgD,GAG9C,QAAShD,KAGP,MAFAtB,iBAAgBmB,KAAMG,GAEfxC,2BAA2BqC,KAAM5B,OAAOgF,eAAejD,GAAoBkD,MAAMrD,KAAMsD,YAGhG,MARAvF,WAAUoC,EAAoBgD,GAQvBhD,GACNoD,OAKHxD,gBAAgBa,oBAAsB,SAAW4C,GAG/C,QAAS5C,KAGP,MAFA/B,iBAAgBmB,KAAMY,GAEfjD,2BAA2BqC,KAAM5B,OAAOgF,eAAexC,GAAqByC,MAAMrD,KAAMsD,YAGjG,MARAvF,WAAU6C,EAAqB4C,GAQxB5C,GACN2C,OAKHxD,gBAAgBqB,oBAAsB,SAAWqC,GAG/C,QAASrC,KAGP,MAFAvC,iBAAgBmB,KAAMoB,GAEfzD,2BAA2BqC,KAAM5B,OAAOgF,eAAehC,GAAqBiC,MAAMrD,KAAMsD,YAGjG,MARAvF,WAAUqD,EAAqBqC,GAQxBrC,GACNmC,OAEHvE,QAAQe,gBAAkBA","file":"lib/shiori_converter.js","sourcesContent":["'use strict';\n\nif (typeof require !== 'undefined') {\n  var ShioriJK = require('shiorijk');\n}\n\n/**\n * SHIORI/2.x/3.x/4.x Converter\n */\nclass ShioriConverter {\n  /**\n   * convert request to specified version\n   * @param {ShioriJK.Message.Request} request - request\n   * @param {string} version - protocol version\n   * @return {ShioriJK.Message.Request} specified version request\n   */\n  static request_to(request, version) {\n    if (!request) throw new ShioriConverter.RequestNotSetError();\n    if (request.request_line.version === '4.0') {\n      if (version === '4.0') {\n        return request;\n      } else if (version === '3.0') {\n        return ShioriConverter.request_4to3(request);\n      } else {\n        return ShioriConverter.request_4to2(request);\n      }\n    } else if (request.request_line.version === '3.0') {\n      if (version === '4.0') {\n        return ShioriConverter.request_3to4(request);\n      } else if (version === '3.0') {\n        return request;\n      } else {\n        return ShioriConverter.request_3to2(request);\n      }\n    } else {\n      if (version === '4.0') {\n        return ShioriConverter.request_2to4(request);\n      } else if (version === '3.0') {\n        return ShioriConverter.request_2to3(request);\n      } else {\n        return request;\n      }\n    }\n  }\n\n  /**\n   * convert response to specified version\n   * @param {ShioriJK.Message.Request} request - request\n   * @param {ShioriJK.Message.Response} response - response\n   * @param {string} version - protocol version\n   * @return {ShioriJK.Message.Response} specified version response\n   */\n  static response_to(request, response, version) {\n    if (!request) throw new ShioriConverter.RequestNotSetError();\n    if (!response) throw new ShioriConverter.ResponseNotSetError();\n    if (response.status_line.version === '4.0') {\n      if (version === '4.0') {\n        return response;\n      } else if (version === '3.0') {\n        return ShioriConverter.response_4to3(request, response);\n      } else {\n        return ShioriConverter.response_4to2(request, response);\n      }\n    } else if (response.status_line.version === '3.0') {\n      if (version === '4.0') {\n        return ShioriConverter.response_3to4(request, response);\n      } else if (version === '3.0') {\n        return response;\n      } else {\n        return ShioriConverter.response_3to2(request, response);\n      }\n    } else {\n      if (version === '4.0') {\n        return ShioriConverter.response_2to4(request, response);\n      } else if (version === '3.0') {\n        return ShioriConverter.response_2to3(request, response);\n      } else {\n        return response;\n      }\n    }\n  }\n\n  /**\n   * convert SHIORI/4.x request to SHIORI/3.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @return {ShioriJK.Message.Request} SHIORI/3.x request\n   */\n  static request_4to3(request) {\n    throw new ShioriConverter.NotImplementedError();\n  }\n\n  /**\n   * convert SHIORI/4.x request to SHIORI/2.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @return {ShioriJK.Message.Request} SHIORI/2.x request\n   */\n  static request_4to2(request) {\n    return ShioriConverter.request_3to2(\n      ShioriConverter.request_4to3(request)\n    );\n  }\n\n  /**\n   * SHIORI/3.x request method to SHIORI/2.x request method\n   * @param {ShioriJK.Message.Request} request - request\n   * @return {string} method\n   */\n  static method3to2(request) {\n    const id = request.headers.header.ID;\n    if (id === 'version') {\n      return 'GET Version';\n    } else if (id === 'OnTeach') {\n      return 'TEACH';\n    } else if (id === 'ownerghostname') {\n      return 'NOTIFY OwnerGhostName';\n    } else if (id === 'otherghostname') {\n      return 'NOTIFY OtherGhostName';\n    } else if (request.request_line.method === 'NOTIFY') {\n      return; // No SHIORI 2.x Event\n    } else if (id.match(/^[a-z]/)) {\n      return 'GET String'; // default SHIORI/2.5\n    } else {\n      return 'GET Sentence'; // default SHIORI/2.2\n    }\n  }\n\n  /**\n   * convert SHIORI/3.x request to SHIORI/2.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @return {ShioriJK.Message.Request} SHIORI/2.x request\n   */\n  static request_3to2(request) {\n    /*\n    SHIORI/2.x互換変換\n    - GET : Sentence : OnCommunicate はGET Sentence SHIORI/2.3に変換され、ヘッダの位置が変更されます。\n    - GET : TEACH : OnTeach はTEACH SHIORI/2.4に変換され、ヘッダの位置が変更されます。\n    */\n    const method = ShioriConverter.method3to2(request);\n    if (!method) {\n      return; // No SHIORI 2.x Event\n    }\n    const id = request.headers.header.ID;\n\n    const headers = new ShioriJK.Headers.Request();\n    const conv_request = new ShioriJK.Message.Request({\n      request_line: new ShioriJK.RequestLine({\n        method: method,\n        protocol: request.protocol,\n        version: '2.6',\n      }),\n      headers: headers,\n    });\n\n    if (method === 'GET Version') {\n      // do nothing\n    } else if (method === 'GET Sentence' && id != null) {\n      if (id === 'OnCommunicate') { // SHIORI/2.3b\n        headers.header['Sender'] = request.headers.header['Reference0'];\n        headers.header['Sentence'] = request.headers.header['Reference1'];\n        headers.header['Age'] = request.headers.header.Age || '0';\n        // ref0,1のためにヘッダをずらす\n        for (const name in request.headers.header) {\n          const value = request.headers.header[name];\n          let result;\n          if (result = name.match(/^Reference(\\d+)$/)) {\n            headers.header['Reference' + (result[1] - 2)] = '' + value;\n          } else {\n            headers.header[name] = '' + value;\n          }\n        }\n        return conv_request;\n      } else { // SHIORI/2.2\n        headers.header['Event'] = id;\n      }\n    } else if (method === 'GET String' && id != null) { // SHIORI/2.5\n      headers.header['ID'] = id;\n    } else if (method === 'TEACH') { // SHIORI/2.4\n      headers.header['Word'] = request.headers.header['Reference0'];\n      // ref0のためにヘッダをずらす\n      for (const name in request.headers.header) {\n        const value = request.headers.header[name];\n        let result;\n        if (result = name.match(/^Reference(\\d+)$/)) {\n          headers.header['Reference' + (result[1] - 1)] = '' + value;\n        } else {\n          headers.header[name] = '' + value;\n        }\n      }\n      return conv_request;\n    } else if (method === 'NOTIFY OwnerGhostName') { // SHIORI/2.0 NOTIFY\n      headers.header['Ghost'] = request.headers.header['Reference0'];\n      return conv_request;\n    } else if (method === 'NOTIFY OtherGhostName') { // SHIORI/2.3 NOTIFY\n      const ghosts = [];\n      for (const name in request.headers.header) {\n        const value = request.headers.header[name];\n        if (name.match(/^Reference\\d+$/)) {\n          ghosts.push('' + value);\n        } else {\n          headers.header[name] = '' + value;\n        }\n      }\n      const ghosts_headers = ghosts\n        .map((ghost) => `GhostEx: ${ghost}\\r\\n`)\n        .join('');\n      // ShioriJK.Headersが同一名複数ヘッダに対応していないため\n      return conv_request.request_line\n        + '\\r\\n'\n        + conv_request.headers\n        + ghosts_headers\n        + '\\r\\n';\n    } else {\n      return;\n    }\n    for (const name in request.headers.header) {\n      if (name === 'ID') continue;\n      const value = request.headers.header[name];\n      headers.header[name] = '' + value;\n    }\n    return conv_request;\n  }\n\n  /**\n   * convert SHIORI/2.x request to SHIORI/3.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @return {ShioriJK.Message.Request} SHIORI/3.x request\n   */\n  static request_2to3(request) {\n    throw new ShioriConverter.NotImplementedError();\n  }\n\n  /**\n   * convert SHIORI/3.x request to SHIORI/4.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @return {ShioriJK.Message.Request} SHIORI/4.x request\n   */\n  static request_3to4(request) {\n    throw new ShioriConverter.NotImplementedError();\n  }\n\n  /**\n   * convert SHIORI/2.x request to SHIORI/4.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @return {ShioriJK.Message.Request} SHIORI/4.x request\n   */\n  static request_2to4(request) {\n    return ShioriConverter.request_3to4(\n      ShioriConverter.request_2to3(request)\n    );\n  }\n\n  /**\n   * convert SHIORI/4.x response to SHIORI/3.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @param {ShioriJK.Message.Response} response - response\n   * @return {ShioriJK.Message.Response} SHIORI/3.x response\n   */\n  static response_4to3(request, response) {\n    throw new ShioriConverter.NotImplementedError();\n  }\n\n  /**\n   * convert SHIORI/4.x response to SHIORI/2.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @param {ShioriJK.Message.Response} response - response\n   * @return {ShioriJK.Message.Response} SHIORI/2.x response\n   */\n  static response_4to2(request, response) {\n    return ShioriConverter.response_3to2(\n      ShioriConverter.response_4to3(request, response)\n    );\n  }\n\n  /**\n   * convert SHIORI/3.x response to SHIORI/2.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @param {ShioriJK.Message.Response} response - response\n   * @return {ShioriJK.Message.Response} SHIORI/2.x response\n   */\n  static response_3to2(request, response) {\n    throw new ShioriConverter.NotImplementedError();\n  }\n\n  /**\n   * convert SHIORI/2.x response to SHIORI/3.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @param {ShioriJK.Message.Response} response - response\n   * @return {ShioriJK.Message.Response} SHIORI/3.x response\n   */\n  static response_2to3(request, response) {\n    const conv_request = ShioriConverter.request_to(request, '2.6');\n    let value_name;\n    switch (conv_request.request_line.method) {\n      case 'GET String':\n        value_name = 'String';\n        break;\n      case 'GET Word':\n        value_name = 'Word';\n        break;\n      case 'GET Status':\n        value_name = 'Status';\n        break;\n      default:\n        value_name = 'Sentence';\n        break;\n    }\n    const headers = new ShioriJK.Headers.Response();\n    if (response.headers.header[value_name] != null) {\n      headers.header.Value = response.headers.header[value_name];\n    }\n    for (const name in response.headers.header) {\n      const value = response.headers.header[name];\n      // for Communicate\n      let result;\n      if (result = name.match(/^Reference(\\d+)$/)) {\n        headers.header[`Reference${result[1] + 1}`] = value;\n      } else if (name === 'To') {\n        headers.header.Reference0 = value;\n      } else if (name !== value_name) {\n        headers.header[name] = value;\n      }\n    }\n    return new ShioriJK.Message.Response({\n      status_line: new ShioriJK.StatusLine({\n        code: response.status_line.code,\n        protocol: response.status_line.protocol,\n        version: '3.0',\n      }),\n      headers: headers,\n    });\n  }\n\n  /**\n   * convert SHIORI/3.x response to SHIORI/4.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @param {ShioriJK.Message.Response} response - response\n   * @return {ShioriJK.Message.Response} SHIORI/4.x response\n   */\n  static response_3to4(request, response) {\n    throw new ShioriConverter.NotImplementedError();\n  }\n\n  /**\n   * convert SHIORI/2.x response to SHIORI/4.x\n   * @param {ShioriJK.Message.Request} request - request\n   * @param {ShioriJK.Message.Response} response - response\n   * @return {ShioriJK.Message.Response} SHIORI/4.x response\n   */\n  static response_2to4(request, response) {\n    return ShioriConverter.response_3to4(\n      ShioriConverter.response_2to3(request, response)\n    );\n  }\n}\n\n/**\n * Request not found error\n */\nShioriConverter.RequestNotSetError = class RequestNotSetError extends Error {\n};\n\n/**\n * Response not found error\n */\nShioriConverter.ResponseNotSetError = class ResponseNotSetError extends Error {\n};\n\n/**\n * Sorry, not implemented!\n */\nShioriConverter.NotImplementedError = class NotImplementedError extends Error {\n};\n\nexport {ShioriConverter};\n"],"sourceRoot":"/source/"}